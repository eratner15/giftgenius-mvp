{"version":3,"file":"static/js/818.63518097.chunk.js","mappings":"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","sources":["components/CorporateGifting.js"],"sourcesContent":["import React, { useState, useCallback, useMemo } from 'react';\n\n// Corporate Gifting Manager\nexport class CorporateGiftingManager {\n  constructor() {\n    this.giftingPrograms = [\n      {\n        id: 'employee-appreciation',\n        name: 'Employee Appreciation',\n        icon: '🏆',\n        description: 'Recognize outstanding employees with thoughtful gifts',\n        budgetRanges: ['$25-50', '$50-100', '$100-250'],\n        occasions: ['Work Anniversary', 'Promotion', 'Project Completion', 'Holiday Bonus'],\n        recommendedCategories: ['tech', 'home', 'experiences', 'personalized']\n      },\n      {\n        id: 'client-relations',\n        name: 'Client Relations',\n        icon: '🤝',\n        description: 'Strengthen relationships with key clients and partners',\n        budgetRanges: ['$50-100', '$100-250', '$250-500', '$500+'],\n        occasions: ['Holiday Gifts', 'Contract Signing', 'Anniversary', 'Thank You'],\n        recommendedCategories: ['luxury', 'experiences', 'gourmet', 'branded']\n      },\n      {\n        id: 'onboarding',\n        name: 'New Employee Welcome',\n        icon: '🎉',\n        description: 'Make new hires feel valued from day one',\n        budgetRanges: ['$25-50', '$50-100'],\n        occasions: ['First Day', 'First Week', 'First Month'],\n        recommendedCategories: ['tech', 'office', 'branded', 'welcome-kit']\n      },\n      {\n        id: 'milestone-rewards',\n        name: 'Milestone Rewards',\n        icon: '🎯',\n        description: 'Celebrate significant achievements and milestones',\n        budgetRanges: ['$100-250', '$250-500', '$500+'],\n        occasions: ['5 Year Anniversary', '10 Year Anniversary', 'Retirement', 'Major Achievement'],\n        recommendedCategories: ['luxury', 'personalized', 'experiences', 'jewelry']\n      }\n    ];\n\n    this.bulkOrders = this.loadBulkOrders();\n    this.corporateClients = this.loadCorporateClients();\n  }\n\n  loadBulkOrders() {\n    const saved = localStorage.getItem('giftgenius_bulk_orders');\n    return saved ? JSON.parse(saved) : [];\n  }\n\n  loadCorporateClients() {\n    const saved = localStorage.getItem('giftgenius_corporate_clients');\n    return saved ? JSON.parse(saved) : [];\n  }\n\n  saveBulkOrders() {\n    localStorage.setItem('giftgenius_bulk_orders', JSON.stringify(this.bulkOrders));\n  }\n\n  saveCorporateClients() {\n    localStorage.setItem('giftgenius_corporate_clients', JSON.stringify(this.corporateClients));\n  }\n\n  createBulkOrder(orderData) {\n    const order = {\n      id: `bulk_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,\n      ...orderData,\n      status: 'pending',\n      createdAt: Date.now(),\n      estimatedDelivery: Date.now() + (7 * 24 * 60 * 60 * 1000), // 7 days\n      totalAmount: this.calculateBulkOrderTotal(orderData)\n    };\n\n    this.bulkOrders.push(order);\n    this.saveBulkOrders();\n    return order;\n  }\n\n  calculateBulkOrderTotal(orderData) {\n    const basePrice = orderData.pricePerUnit || 50;\n    const quantity = orderData.quantity || 1;\n    const subtotal = basePrice * quantity;\n\n    // Volume discounts\n    let discount = 0;\n    if (quantity >= 100) discount = 0.20; // 20% for 100+\n    else if (quantity >= 50) discount = 0.15; // 15% for 50+\n    else if (quantity >= 25) discount = 0.10; // 10% for 25+\n    else if (quantity >= 10) discount = 0.05; // 5% for 10+\n\n    const discountAmount = subtotal * discount;\n    const total = subtotal - discountAmount;\n\n    return {\n      subtotal,\n      discount: discountAmount,\n      discountPercentage: discount * 100,\n      total,\n      pricePerUnit: total / quantity\n    };\n  }\n\n  addCorporateClient(clientData) {\n    const client = {\n      id: `client_${Date.now()}`,\n      ...clientData,\n      createdAt: Date.now(),\n      status: 'active',\n      totalOrders: 0,\n      totalSpent: 0\n    };\n\n    this.corporateClients.push(client);\n    this.saveCorporateClients();\n    return client;\n  }\n\n  getVolumeDiscountInfo(quantity) {\n    if (quantity >= 100) return { percentage: 20, savings: 'Save 20%' };\n    if (quantity >= 50) return { percentage: 15, savings: 'Save 15%' };\n    if (quantity >= 25) return { percentage: 10, savings: 'Save 10%' };\n    if (quantity >= 10) return { percentage: 5, savings: 'Save 5%' };\n    return { percentage: 0, savings: 'No discount' };\n  }\n}\n\n// Corporate Gifting Dashboard\nexport const CorporateGiftingDashboard = ({ corporateManager, onCreateOrder, onViewProgram }) => {\n  const [activeTab, setActiveTab] = useState('overview');\n  const [selectedProgram, setSelectedProgram] = useState(null);\n\n  return (\n    <div className=\"corporate-gifting-dashboard\">\n      <div className=\"corporate-header\">\n        <div className=\"corporate-title\">\n          <h2>🏢 Corporate Gifting Solutions</h2>\n          <p>Streamline your business gifting with bulk orders and volume discounts</p>\n        </div>\n\n        <button\n          className=\"btn-primary\"\n          onClick={() => setActiveTab('create-order')}\n        >\n          Create Bulk Order\n        </button>\n      </div>\n\n      {/* Navigation Tabs */}\n      <div className=\"corporate-nav\">\n        <button\n          className={`nav-tab ${activeTab === 'overview' ? 'active' : ''}`}\n          onClick={() => setActiveTab('overview')}\n        >\n          Overview\n        </button>\n        <button\n          className={`nav-tab ${activeTab === 'programs' ? 'active' : ''}`}\n          onClick={() => setActiveTab('programs')}\n        >\n          Programs\n        </button>\n        <button\n          className={`nav-tab ${activeTab === 'orders' ? 'active' : ''}`}\n          onClick={() => setActiveTab('orders')}\n        >\n          Orders\n        </button>\n        <button\n          className={`nav-tab ${activeTab === 'create-order' ? 'active' : ''}`}\n          onClick={() => setActiveTab('create-order')}\n        >\n          Create Order\n        </button>\n      </div>\n\n      {/* Tab Content */}\n      <div className=\"corporate-content\">\n        {activeTab === 'overview' && (\n          <CorporateOverview\n            corporateManager={corporateManager}\n            onViewProgram={setSelectedProgram}\n          />\n        )}\n\n        {activeTab === 'programs' && (\n          <GiftingPrograms\n            programs={corporateManager.giftingPrograms}\n            onSelectProgram={setSelectedProgram}\n          />\n        )}\n\n        {activeTab === 'orders' && (\n          <BulkOrderHistory\n            orders={corporateManager.bulkOrders}\n            corporateManager={corporateManager}\n          />\n        )}\n\n        {activeTab === 'create-order' && (\n          <BulkOrderForm\n            corporateManager={corporateManager}\n            onSubmit={onCreateOrder}\n          />\n        )}\n      </div>\n\n      {/* Program Detail Modal */}\n      {selectedProgram && (\n        <ProgramDetailModal\n          program={selectedProgram}\n          onClose={() => setSelectedProgram(null)}\n          onCreateOrder={() => {\n            setActiveTab('create-order');\n            setSelectedProgram(null);\n          }}\n        />\n      )}\n    </div>\n  );\n};\n\n// Corporate Overview Component\nconst CorporateOverview = ({ corporateManager, onViewProgram }) => {\n  const stats = useMemo(() => {\n    const orders = corporateManager.bulkOrders;\n    return {\n      totalOrders: orders.length,\n      totalSpent: orders.reduce((sum, order) => sum + (order.totalAmount?.total || 0), 0),\n      averageOrderSize: orders.length ? Math.round(orders.reduce((sum, order) => sum + (order.quantity || 0), 0) / orders.length) : 0,\n      activePrograms: corporateManager.giftingPrograms.length\n    };\n  }, [corporateManager]);\n\n  return (\n    <div className=\"corporate-overview\">\n      {/* Key Stats */}\n      <div className=\"corporate-stats\">\n        <div className=\"stat-card\">\n          <div className=\"stat-icon\">📦</div>\n          <div className=\"stat-content\">\n            <h3>{stats.totalOrders}</h3>\n            <p>Total Orders</p>\n          </div>\n        </div>\n\n        <div className=\"stat-card\">\n          <div className=\"stat-icon\">💰</div>\n          <div className=\"stat-content\">\n            <h3>${stats.totalSpent.toLocaleString()}</h3>\n            <p>Total Spent</p>\n          </div>\n        </div>\n\n        <div className=\"stat-card\">\n          <div className=\"stat-icon\">📊</div>\n          <div className=\"stat-content\">\n            <h3>{stats.averageOrderSize}</h3>\n            <p>Avg. Order Size</p>\n          </div>\n        </div>\n\n        <div className=\"stat-card\">\n          <div className=\"stat-icon\">🎯</div>\n          <div className=\"stat-content\">\n            <h3>{stats.activePrograms}</h3>\n            <p>Programs Available</p>\n          </div>\n        </div>\n      </div>\n\n      {/* Volume Discount Info */}\n      <div className=\"discount-tiers\">\n        <h3>Volume Discount Tiers</h3>\n        <div className=\"discount-grid\">\n          <div className=\"discount-tier\">\n            <div className=\"tier-quantity\">10-24 items</div>\n            <div className=\"tier-discount\">5% OFF</div>\n          </div>\n          <div className=\"discount-tier\">\n            <div className=\"tier-quantity\">25-49 items</div>\n            <div className=\"tier-discount\">10% OFF</div>\n          </div>\n          <div className=\"discount-tier\">\n            <div className=\"tier-quantity\">50-99 items</div>\n            <div className=\"tier-discount\">15% OFF</div>\n          </div>\n          <div className=\"discount-tier popular\">\n            <div className=\"tier-badge\">Most Popular</div>\n            <div className=\"tier-quantity\">100+ items</div>\n            <div className=\"tier-discount\">20% OFF</div>\n          </div>\n        </div>\n      </div>\n\n      {/* Quick Actions */}\n      <div className=\"corporate-quick-actions\">\n        <h3>Popular Programs</h3>\n        <div className=\"program-quick-cards\">\n          {corporateManager.giftingPrograms.slice(0, 3).map(program => (\n            <div\n              key={program.id}\n              className=\"program-quick-card\"\n              onClick={() => onViewProgram(program)}\n            >\n              <div className=\"program-icon\">{program.icon}</div>\n              <div className=\"program-info\">\n                <h4>{program.name}</h4>\n                <p>{program.description}</p>\n              </div>\n              <div className=\"program-arrow\">→</div>\n            </div>\n          ))}\n        </div>\n      </div>\n\n      {/* Benefits */}\n      <div className=\"corporate-benefits\">\n        <h3>Why Choose Corporate Gifting?</h3>\n        <div className=\"benefits-grid\">\n          <div className=\"benefit-item\">\n            <div className=\"benefit-icon\">💼</div>\n            <h4>Professional Management</h4>\n            <p>Dedicated account managers for large orders</p>\n          </div>\n          <div className=\"benefit-item\">\n            <div className=\"benefit-icon\">🚚</div>\n            <h4>Flexible Delivery</h4>\n            <p>Coordinated delivery to multiple locations</p>\n          </div>\n          <div className=\"benefit-item\">\n            <div className=\"benefit-icon\">🎨</div>\n            <h4>Custom Branding</h4>\n            <p>Add your company logo and messaging</p>\n          </div>\n          <div className=\"benefit-item\">\n            <div className=\"benefit-icon\">📈</div>\n            <h4>Volume Discounts</h4>\n            <p>Save up to 20% on bulk orders</p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\n// Gifting Programs Component\nconst GiftingPrograms = ({ programs, onSelectProgram }) => {\n  return (\n    <div className=\"gifting-programs\">\n      <div className=\"programs-header\">\n        <h3>Corporate Gifting Programs</h3>\n        <p>Choose the perfect program for your business needs</p>\n      </div>\n\n      <div className=\"programs-grid\">\n        {programs.map(program => (\n          <div\n            key={program.id}\n            className=\"program-card\"\n            onClick={() => onSelectProgram(program)}\n          >\n            <div className=\"program-header\">\n              <div className=\"program-icon\">{program.icon}</div>\n              <h4>{program.name}</h4>\n            </div>\n\n            <p className=\"program-description\">{program.description}</p>\n\n            <div className=\"program-details\">\n              <div className=\"detail-section\">\n                <h5>Budget Ranges</h5>\n                <div className=\"budget-tags\">\n                  {program.budgetRanges.map(range => (\n                    <span key={range} className=\"budget-tag\">{range}</span>\n                  ))}\n                </div>\n              </div>\n\n              <div className=\"detail-section\">\n                <h5>Occasions</h5>\n                <div className=\"occasion-list\">\n                  {program.occasions.slice(0, 3).map(occasion => (\n                    <span key={occasion} className=\"occasion-item\">{occasion}</span>\n                  ))}\n                  {program.occasions.length > 3 && (\n                    <span className=\"occasion-more\">+{program.occasions.length - 3} more</span>\n                  )}\n                </div>\n              </div>\n            </div>\n\n            <button className=\"program-select-btn\">\n              View Program →\n            </button>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\n// Bulk Order Form\nconst BulkOrderForm = ({ corporateManager, onSubmit }) => {\n  const [formData, setFormData] = useState({\n    companyName: '',\n    contactName: '',\n    email: '',\n    phone: '',\n    program: '',\n    occasion: '',\n    quantity: 10,\n    budgetPerItem: 50,\n    deliveryDate: '',\n    deliveryAddress: '',\n    customizations: '',\n    notes: ''\n  });\n\n  const [quotation, setQuotation] = useState(null);\n\n  const calculateQuotation = useCallback(() => {\n    if (formData.quantity && formData.budgetPerItem) {\n      const orderData = {\n        quantity: parseInt(formData.quantity),\n        pricePerUnit: parseFloat(formData.budgetPerItem)\n      };\n      const total = corporateManager.calculateBulkOrderTotal(orderData);\n      setQuotation(total);\n    }\n  }, [formData.quantity, formData.budgetPerItem, corporateManager]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const orderData = {\n      ...formData,\n      quantity: parseInt(formData.quantity),\n      pricePerUnit: parseFloat(formData.budgetPerItem)\n    };\n    onSubmit(orderData);\n  };\n\n  return (\n    <div className=\"bulk-order-form\">\n      <div className=\"form-header\">\n        <h3>Create Bulk Order</h3>\n        <p>Get instant pricing and place your corporate gift order</p>\n      </div>\n\n      <form onSubmit={handleSubmit}>\n        {/* Company Information */}\n        <div className=\"form-section\">\n          <h4>Company Information</h4>\n          <div className=\"form-row\">\n            <div className=\"form-group\">\n              <label>Company Name</label>\n              <input\n                type=\"text\"\n                value={formData.companyName}\n                onChange={(e) => setFormData(prev => ({...prev, companyName: e.target.value}))}\n                required\n              />\n            </div>\n            <div className=\"form-group\">\n              <label>Contact Name</label>\n              <input\n                type=\"text\"\n                value={formData.contactName}\n                onChange={(e) => setFormData(prev => ({...prev, contactName: e.target.value}))}\n                required\n              />\n            </div>\n          </div>\n\n          <div className=\"form-row\">\n            <div className=\"form-group\">\n              <label>Email</label>\n              <input\n                type=\"email\"\n                value={formData.email}\n                onChange={(e) => setFormData(prev => ({...prev, email: e.target.value}))}\n                required\n              />\n            </div>\n            <div className=\"form-group\">\n              <label>Phone</label>\n              <input\n                type=\"tel\"\n                value={formData.phone}\n                onChange={(e) => setFormData(prev => ({...prev, phone: e.target.value}))}\n                required\n              />\n            </div>\n          </div>\n        </div>\n\n        {/* Order Details */}\n        <div className=\"form-section\">\n          <h4>Order Details</h4>\n          <div className=\"form-row\">\n            <div className=\"form-group\">\n              <label>Gifting Program</label>\n              <select\n                value={formData.program}\n                onChange={(e) => setFormData(prev => ({...prev, program: e.target.value}))}\n                required\n              >\n                <option value=\"\">Select program</option>\n                {corporateManager.giftingPrograms.map(program => (\n                  <option key={program.id} value={program.id}>\n                    {program.icon} {program.name}\n                  </option>\n                ))}\n              </select>\n            </div>\n            <div className=\"form-group\">\n              <label>Occasion</label>\n              <input\n                type=\"text\"\n                value={formData.occasion}\n                onChange={(e) => setFormData(prev => ({...prev, occasion: e.target.value}))}\n                placeholder=\"e.g., Holiday Gifts, Employee Appreciation\"\n                required\n              />\n            </div>\n          </div>\n\n          <div className=\"form-row\">\n            <div className=\"form-group\">\n              <label>Quantity</label>\n              <input\n                type=\"number\"\n                min=\"1\"\n                value={formData.quantity}\n                onChange={(e) => {\n                  setFormData(prev => ({...prev, quantity: e.target.value}));\n                  calculateQuotation();\n                }}\n                required\n              />\n              <div className=\"quantity-helper\">\n                {corporateManager.getVolumeDiscountInfo(parseInt(formData.quantity)).savings}\n              </div>\n            </div>\n            <div className=\"form-group\">\n              <label>Budget per Item</label>\n              <input\n                type=\"number\"\n                min=\"10\"\n                step=\"5\"\n                value={formData.budgetPerItem}\n                onChange={(e) => {\n                  setFormData(prev => ({...prev, budgetPerItem: e.target.value}));\n                  calculateQuotation();\n                }}\n                required\n              />\n            </div>\n          </div>\n        </div>\n\n        {/* Quotation Display */}\n        {quotation && (\n          <div className=\"quotation-display\">\n            <h4>💰 Instant Quote</h4>\n            <div className=\"quote-breakdown\">\n              <div className=\"quote-line\">\n                <span>Subtotal ({formData.quantity} items)</span>\n                <span>${quotation.subtotal.toFixed(2)}</span>\n              </div>\n              {quotation.discount > 0 && (\n                <div className=\"quote-line discount\">\n                  <span>Volume Discount ({quotation.discountPercentage}%)</span>\n                  <span>-${quotation.discount.toFixed(2)}</span>\n                </div>\n              )}\n              <div className=\"quote-line total\">\n                <span>Total</span>\n                <span>${quotation.total.toFixed(2)}</span>\n              </div>\n              <div className=\"quote-per-item\">\n                ${quotation.pricePerUnit.toFixed(2)} per item after discount\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* Delivery Information */}\n        <div className=\"form-section\">\n          <h4>Delivery Information</h4>\n          <div className=\"form-group\">\n            <label>Delivery Date</label>\n            <input\n              type=\"date\"\n              value={formData.deliveryDate}\n              onChange={(e) => setFormData(prev => ({...prev, deliveryDate: e.target.value}))}\n              min={new Date(Date.now() + 7 * 24 * 60 * 60 * 1000).toISOString().split('T')[0]} // 7 days from now\n              required\n            />\n          </div>\n          <div className=\"form-group\">\n            <label>Delivery Address</label>\n            <textarea\n              value={formData.deliveryAddress}\n              onChange={(e) => setFormData(prev => ({...prev, deliveryAddress: e.target.value}))}\n              placeholder=\"Full delivery address including any special instructions\"\n              rows={3}\n              required\n            />\n          </div>\n        </div>\n\n        {/* Customizations */}\n        <div className=\"form-section\">\n          <h4>Customizations (Optional)</h4>\n          <div className=\"form-group\">\n            <label>Customization Requests</label>\n            <textarea\n              value={formData.customizations}\n              onChange={(e) => setFormData(prev => ({...prev, customizations: e.target.value}))}\n              placeholder=\"Company logo, custom messaging, special packaging, etc.\"\n              rows={3}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label>Additional Notes</label>\n            <textarea\n              value={formData.notes}\n              onChange={(e) => setFormData(prev => ({...prev, notes: e.target.value}))}\n              placeholder=\"Any special requirements or preferences\"\n              rows={2}\n            />\n          </div>\n        </div>\n\n        <div className=\"form-footer\">\n          <button type=\"submit\" className=\"btn-primary large\">\n            Submit Order Request\n          </button>\n          <div className=\"form-note\">\n            You'll receive a detailed quotation and timeline within 2 business hours\n          </div>\n        </div>\n      </form>\n    </div>\n  );\n};\n\n// Bulk Order History\nconst BulkOrderHistory = ({ orders, corporateManager }) => {\n  if (orders.length === 0) {\n    return (\n      <div className=\"empty-orders\">\n        <div className=\"empty-icon\">📦</div>\n        <h3>No orders yet</h3>\n        <p>Your bulk orders will appear here once you place them</p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"bulk-order-history\">\n      <h3>Order History</h3>\n      <div className=\"orders-list\">\n        {orders.map(order => (\n          <div key={order.id} className=\"order-item\">\n            <div className=\"order-header\">\n              <div className=\"order-info\">\n                <h4>Order #{order.id.substr(-8)}</h4>\n                <p>{order.companyName} • {order.quantity} items</p>\n              </div>\n              <div className={`order-status ${order.status}`}>\n                {order.status}\n              </div>\n            </div>\n\n            <div className=\"order-details\">\n              <div className=\"detail-row\">\n                <span>Program:</span>\n                <span>{order.program}</span>\n              </div>\n              <div className=\"detail-row\">\n                <span>Total:</span>\n                <span>${order.totalAmount?.total?.toFixed(2) || 'TBD'}</span>\n              </div>\n              <div className=\"detail-row\">\n                <span>Delivery:</span>\n                <span>{new Date(order.deliveryDate).toLocaleDateString()}</span>\n              </div>\n            </div>\n\n            <div className=\"order-actions\">\n              <button className=\"btn-secondary small\">View Details</button>\n              {order.status === 'pending' && (\n                <button className=\"btn-ghost small\">Cancel</button>\n              )}\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\n// Program Detail Modal\nconst ProgramDetailModal = ({ program, onClose, onCreateOrder }) => {\n  return (\n    <div className=\"program-modal-overlay\">\n      <div className=\"program-modal\">\n        <div className=\"program-modal-header\">\n          <div className=\"program-modal-title\">\n            <span className=\"program-icon\">{program.icon}</span>\n            <h3>{program.name}</h3>\n          </div>\n          <button className=\"close-btn\" onClick={onClose}>✕</button>\n        </div>\n\n        <div className=\"program-modal-content\">\n          <p className=\"program-description\">{program.description}</p>\n\n          <div className=\"program-details-grid\">\n            <div className=\"detail-section\">\n              <h4>Budget Ranges</h4>\n              <div className=\"budget-options\">\n                {program.budgetRanges.map(range => (\n                  <span key={range} className=\"budget-option\">{range}</span>\n                ))}\n              </div>\n            </div>\n\n            <div className=\"detail-section\">\n              <h4>Perfect For</h4>\n              <div className=\"occasions-list\">\n                {program.occasions.map(occasion => (\n                  <div key={occasion} className=\"occasion-item\">\n                    <span className=\"occasion-dot\">•</span>\n                    <span>{occasion}</span>\n                  </div>\n                ))}\n              </div>\n            </div>\n\n            <div className=\"detail-section\">\n              <h4>Recommended Categories</h4>\n              <div className=\"categories-list\">\n                {program.recommendedCategories.map(category => (\n                  <span key={category} className=\"category-tag\">\n                    {category.replace('-', ' ')}\n                  </span>\n                ))}\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"program-modal-footer\">\n          <button className=\"btn-secondary\" onClick={onClose}>\n            Learn More Later\n          </button>\n          <button className=\"btn-primary\" onClick={onCreateOrder}>\n            Create Order\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst CorporateGiftingExports = {\n  CorporateGiftingManager,\n  CorporateGiftingDashboard\n};\n\nexport default CorporateGiftingExports;"],"names":["CorporateGiftingManager","constructor","this","giftingPrograms","id","name","icon","description","budgetRanges","occasions","recommendedCategories","bulkOrders","loadBulkOrders","corporateClients","loadCorporateClients","saved","localStorage","getItem","JSON","parse","saveBulkOrders","setItem","stringify","saveCorporateClients","createBulkOrder","orderData","order","_objectSpread","concat","Date","now","Math","random","toString","substr","status","createdAt","estimatedDelivery","totalAmount","calculateBulkOrderTotal","push","basePrice","pricePerUnit","quantity","subtotal","discount","discountAmount","total","discountPercentage","addCorporateClient","clientData","client","totalOrders","totalSpent","getVolumeDiscountInfo","percentage","savings","CorporateGiftingDashboard","_ref","corporateManager","onCreateOrder","onViewProgram","activeTab","setActiveTab","useState","selectedProgram","setSelectedProgram","_jsxs","className","children","_jsx","onClick","CorporateOverview","GiftingPrograms","programs","onSelectProgram","BulkOrderHistory","orders","BulkOrderForm","onSubmit","ProgramDetailModal","program","onClose","_ref2","stats","useMemo","length","reduce","sum","_order$totalAmount","averageOrderSize","round","activePrograms","toLocaleString","slice","map","_ref3","range","occasion","_ref4","formData","setFormData","companyName","contactName","email","phone","budgetPerItem","deliveryDate","deliveryAddress","customizations","notes","quotation","setQuotation","calculateQuotation","useCallback","parseInt","parseFloat","e","preventDefault","type","value","onChange","prev","target","required","placeholder","min","step","toFixed","toISOString","split","rows","_ref5","_order$totalAmount2","_order$totalAmount2$t","toLocaleDateString","_ref6","category","replace"],"sourceRoot":""}