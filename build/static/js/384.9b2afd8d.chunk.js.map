{"version":3,"file":"static/js/384.9b2afd8d.chunk.js","mappings":"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","sources":["components/GiftReminders.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\n\n// Gift Reminder System\nexport class GiftReminderManager {\n  constructor() {\n    this.reminders = this.loadReminders();\n    this.defaultOccasions = [\n      {\n        name: 'Anniversary',\n        icon: '💍',\n        category: 'relationship',\n        leadTime: 14, // days before to remind\n        suggestions: ['jewelry', 'experiences', 'personalized']\n      },\n      {\n        name: 'Birthday',\n        icon: '🎂',\n        category: 'celebration',\n        leadTime: 7,\n        suggestions: ['fashion', 'beauty', 'tech']\n      },\n      {\n        name: \"Valentine's Day\",\n        icon: '💝',\n        category: 'holiday',\n        leadTime: 10,\n        suggestions: ['jewelry', 'flowers', 'romantic']\n      },\n      {\n        name: 'Christmas',\n        icon: '🎄',\n        category: 'holiday',\n        leadTime: 21,\n        suggestions: ['fashion', 'home', 'experiences']\n      },\n      {\n        name: \"Mother's Day\",\n        icon: '🌸',\n        category: 'holiday',\n        leadTime: 14,\n        suggestions: ['beauty', 'jewelry', 'spa']\n      }\n    ];\n  }\n\n  loadReminders() {\n    const saved = localStorage.getItem('giftgenius_reminders');\n    return saved ? JSON.parse(saved) : [];\n  }\n\n  saveReminders() {\n    localStorage.setItem('giftgenius_reminders', JSON.stringify(this.reminders));\n  }\n\n  addReminder(reminderData) {\n    const reminder = {\n      id: `reminder_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,\n      ...reminderData,\n      createdAt: Date.now(),\n      status: 'active',\n      notificationsSent: 0\n    };\n\n    this.reminders.push(reminder);\n    this.saveReminders();\n    return reminder;\n  }\n\n  updateReminder(id, updates) {\n    const index = this.reminders.findIndex(r => r.id === id);\n    if (index >= 0) {\n      this.reminders[index] = { ...this.reminders[index], ...updates };\n      this.saveReminders();\n      return this.reminders[index];\n    }\n    return null;\n  }\n\n  deleteReminder(id) {\n    this.reminders = this.reminders.filter(r => r.id !== id);\n    this.saveReminders();\n  }\n\n  getUpcomingReminders(daysAhead = 30) {\n    const now = Date.now();\n    const future = now + (daysAhead * 24 * 60 * 60 * 1000);\n\n    return this.reminders\n      .filter(r => r.status === 'active')\n      .filter(r => {\n        const reminderDate = new Date(r.date).getTime();\n        const notifyDate = reminderDate - (r.leadTime * 24 * 60 * 60 * 1000);\n        return notifyDate >= now && notifyDate <= future;\n      })\n      .sort((a, b) => new Date(a.date) - new Date(b.date));\n  }\n\n  getDueReminders() {\n    const now = Date.now();\n\n    return this.reminders\n      .filter(r => r.status === 'active')\n      .filter(r => {\n        const reminderDate = new Date(r.date).getTime();\n        const notifyDate = reminderDate - (r.leadTime * 24 * 60 * 60 * 1000);\n        return now >= notifyDate && now <= reminderDate;\n      })\n      .sort((a, b) => new Date(a.date) - new Date(b.date));\n  }\n\n  markAsNotified(id) {\n    const reminder = this.reminders.find(r => r.id === id);\n    if (reminder) {\n      reminder.notificationsSent++;\n      reminder.lastNotified = Date.now();\n      this.saveReminders();\n    }\n  }\n\n  generateYearlyReminders(partnerInfo) {\n    const currentYear = new Date().getFullYear();\n    const suggestions = [];\n\n    if (partnerInfo.birthday) {\n      suggestions.push({\n        occasion: 'Birthday',\n        date: new Date(currentYear, new Date(partnerInfo.birthday).getMonth(), new Date(partnerInfo.birthday).getDate()),\n        person: partnerInfo.name,\n        leadTime: 7\n      });\n    }\n\n    if (partnerInfo.anniversaryDate) {\n      suggestions.push({\n        occasion: 'Anniversary',\n        date: new Date(currentYear, new Date(partnerInfo.anniversaryDate).getMonth(), new Date(partnerInfo.anniversaryDate).getDate()),\n        person: partnerInfo.name,\n        leadTime: 14\n      });\n    }\n\n    // Add common holidays\n    const holidays = [\n      { name: \"Valentine's Day\", month: 1, day: 14, leadTime: 10 },\n      { name: \"Mother's Day\", month: 4, day: 12, leadTime: 14 }, // Second Sunday in May (approximate)\n      { name: \"Christmas\", month: 11, day: 25, leadTime: 21 }\n    ];\n\n    holidays.forEach(holiday => {\n      suggestions.push({\n        occasion: holiday.name,\n        date: new Date(currentYear, holiday.month, holiday.day),\n        person: partnerInfo.name,\n        leadTime: holiday.leadTime\n      });\n    });\n\n    return suggestions;\n  }\n}\n\n// Gift Reminder Dashboard\nexport const GiftReminderDashboard = ({ reminderManager, onGiftSearch }) => {\n  const [reminders, setReminders] = useState(reminderManager.reminders);\n  const [showAddForm, setShowAddForm] = useState(false);\n  const [dueReminders, setDueReminders] = useState([]);\n  const [upcomingReminders, setUpcomingReminders] = useState([]);\n\n  useEffect(() => {\n    const updateReminders = () => {\n      setReminders([...reminderManager.reminders]);\n      setDueReminders(reminderManager.getDueReminders());\n      setUpcomingReminders(reminderManager.getUpcomingReminders());\n    };\n\n    updateReminders();\n    const interval = setInterval(updateReminders, 60000); // Update every minute\n\n    return () => clearInterval(interval);\n  }, [reminderManager]);\n\n  const handleStartGiftSearch = useCallback((reminder) => {\n    const occasion = reminderManager.defaultOccasions.find(o => o.name === reminder.occasion);\n    const searchParams = {\n      occasion: reminder.occasion.toLowerCase(),\n      suggestions: occasion?.suggestions || [],\n      deadline: reminder.date,\n      person: reminder.person\n    };\n\n    onGiftSearch(searchParams);\n    reminderManager.markAsNotified(reminder.id);\n  }, [reminderManager, onGiftSearch]);\n\n  return (\n    <div className=\"reminder-dashboard\">\n      <div className=\"reminder-header\">\n        <h2>🗓️ Gift Reminders</h2>\n        <button\n          className=\"btn-primary\"\n          onClick={() => setShowAddForm(true)}\n        >\n          Add Reminder\n        </button>\n      </div>\n\n      {/* Due Now Section */}\n      {dueReminders.length > 0 && (\n        <div className=\"reminder-section urgent\">\n          <h3>🚨 Action Needed</h3>\n          <div className=\"reminder-cards\">\n            {dueReminders.map(reminder => (\n              <div key={reminder.id} className=\"reminder-card due\">\n                <div className=\"reminder-urgent-indicator\">\n                  <span className=\"urgent-pulse\"></span>\n                  ACTION NEEDED\n                </div>\n\n                <div className=\"reminder-content\">\n                  <div className=\"reminder-occasion\">\n                    <span className=\"occasion-icon\">\n                      {reminderManager.defaultOccasions.find(o => o.name === reminder.occasion)?.icon || '🎁'}\n                    </span>\n                    <div className=\"occasion-info\">\n                      <h4>{reminder.occasion}</h4>\n                      <p>{reminder.person}</p>\n                    </div>\n                  </div>\n\n                  <div className=\"reminder-timing\">\n                    <div className=\"days-until\">\n                      {Math.ceil((new Date(reminder.date) - new Date()) / (1000 * 60 * 60 * 24))} days until\n                    </div>\n                    <div className=\"reminder-date\">\n                      {new Date(reminder.date).toLocaleDateString()}\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"reminder-actions\">\n                  <button\n                    className=\"btn-primary start-shopping\"\n                    onClick={() => handleStartGiftSearch(reminder)}\n                  >\n                    Start Shopping\n                  </button>\n                  <button\n                    className=\"btn-secondary snooze\"\n                    onClick={() => {\n                      reminderManager.updateReminder(reminder.id, {\n                        leadTime: reminder.leadTime + 3\n                      });\n                    }}\n                  >\n                    Snooze 3 days\n                  </button>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n\n      {/* Upcoming Section */}\n      {upcomingReminders.length > 0 && (\n        <div className=\"reminder-section upcoming\">\n          <h3>📅 Coming Up</h3>\n          <div className=\"reminder-list\">\n            {upcomingReminders.map(reminder => (\n              <div key={reminder.id} className=\"reminder-item\">\n                <div className=\"reminder-info\">\n                  <span className=\"reminder-icon\">\n                    {reminderManager.defaultOccasions.find(o => o.name === reminder.occasion)?.icon || '🎁'}\n                  </span>\n                  <div className=\"reminder-details\">\n                    <h4>{reminder.occasion} - {reminder.person}</h4>\n                    <p>{new Date(reminder.date).toLocaleDateString()}</p>\n                  </div>\n                </div>\n                <div className=\"reminder-countdown\">\n                  {Math.ceil((new Date(reminder.date) - new Date()) / (1000 * 60 * 60 * 24))} days\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n\n      {/* Add Reminder Form */}\n      {showAddForm && (\n        <ReminderForm\n          reminderManager={reminderManager}\n          onClose={() => setShowAddForm(false)}\n          onSave={(reminderData) => {\n            reminderManager.addReminder(reminderData);\n            setShowAddForm(false);\n          }}\n        />\n      )}\n\n      {/* Quick Setup */}\n      <div className=\"reminder-section quick-setup\">\n        <h3>⚡ Quick Setup</h3>\n        <p>Let us help you never miss an important date again</p>\n        <div className=\"quick-setup-options\">\n          <button\n            className=\"quick-setup-btn\"\n            onClick={() => setShowAddForm(true)}\n          >\n            📱 Add Partner's Birthday\n          </button>\n          <button\n            className=\"quick-setup-btn\"\n            onClick={() => setShowAddForm(true)}\n          >\n            💍 Set Anniversary Reminder\n          </button>\n          <button\n            className=\"quick-setup-btn\"\n            onClick={() => {\n              // Auto-add holiday reminders\n              const holidays = [\n                { occasion: \"Valentine's Day\", date: '2024-02-14', leadTime: 10 },\n                { occasion: \"Mother's Day\", date: '2024-05-12', leadTime: 14 },\n                { occasion: \"Christmas\", date: '2024-12-25', leadTime: 21 }\n              ];\n\n              holidays.forEach(holiday => {\n                reminderManager.addReminder({\n                  ...holiday,\n                  person: 'Partner',\n                  notes: 'Auto-generated holiday reminder'\n                });\n              });\n            }}\n          >\n            🎄 Add Holiday Reminders\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\n// Add Reminder Form\nconst ReminderForm = ({ reminderManager, onClose, onSave }) => {\n  const [formData, setFormData] = useState({\n    occasion: '',\n    person: '',\n    date: '',\n    leadTime: 7,\n    notes: '',\n    recurring: false,\n    customOccasion: ''\n  });\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const reminderData = {\n      ...formData,\n      occasion: formData.occasion === 'custom' ? formData.customOccasion : formData.occasion\n    };\n    onSave(reminderData);\n  };\n\n  return (\n    <div className=\"reminder-form-overlay\">\n      <div className=\"reminder-form\">\n        <div className=\"form-header\">\n          <h3>Add Gift Reminder</h3>\n          <button className=\"close-btn\" onClick={onClose}>✕</button>\n        </div>\n\n        <form onSubmit={handleSubmit}>\n          <div className=\"form-group\">\n            <label>Occasion</label>\n            <select\n              value={formData.occasion}\n              onChange={(e) => setFormData(prev => ({...prev, occasion: e.target.value}))}\n              required\n            >\n              <option value=\"\">Select occasion</option>\n              {reminderManager.defaultOccasions.map(occasion => (\n                <option key={occasion.name} value={occasion.name}>\n                  {occasion.icon} {occasion.name}\n                </option>\n              ))}\n              <option value=\"custom\">✏️ Custom Occasion</option>\n            </select>\n          </div>\n\n          {formData.occasion === 'custom' && (\n            <div className=\"form-group\">\n              <label>Custom Occasion Name</label>\n              <input\n                type=\"text\"\n                value={formData.customOccasion}\n                onChange={(e) => setFormData(prev => ({...prev, customOccasion: e.target.value}))}\n                placeholder=\"e.g., Graduation, Promotion, etc.\"\n                required\n              />\n            </div>\n          )}\n\n          <div className=\"form-group\">\n            <label>Person</label>\n            <input\n              type=\"text\"\n              value={formData.person}\n              onChange={(e) => setFormData(prev => ({...prev, person: e.target.value}))}\n              placeholder=\"e.g., Sarah, Mom, Best Friend\"\n              required\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <label>Date</label>\n            <input\n              type=\"date\"\n              value={formData.date}\n              onChange={(e) => setFormData(prev => ({...prev, date: e.target.value}))}\n              min={new Date().toISOString().split('T')[0]}\n              required\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <label>Remind me</label>\n            <select\n              value={formData.leadTime}\n              onChange={(e) => setFormData(prev => ({...prev, leadTime: parseInt(e.target.value)}))}\n            >\n              <option value={3}>3 days before</option>\n              <option value={7}>1 week before</option>\n              <option value={14}>2 weeks before</option>\n              <option value={21}>3 weeks before</option>\n              <option value={30}>1 month before</option>\n            </select>\n          </div>\n\n          <div className=\"form-group\">\n            <label>Notes (optional)</label>\n            <textarea\n              value={formData.notes}\n              onChange={(e) => setFormData(prev => ({...prev, notes: e.target.value}))}\n              placeholder=\"Gift ideas, preferences, budget notes...\"\n              rows={3}\n            />\n          </div>\n\n          <div className=\"form-group checkbox-group\">\n            <label>\n              <input\n                type=\"checkbox\"\n                checked={formData.recurring}\n                onChange={(e) => setFormData(prev => ({...prev, recurring: e.target.checked}))}\n              />\n              Make this a yearly recurring reminder\n            </label>\n          </div>\n\n          <div className=\"form-footer\">\n            <button type=\"button\" className=\"btn-secondary\" onClick={onClose}>\n              Cancel\n            </button>\n            <button type=\"submit\" className=\"btn-primary\">\n              Save Reminder\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\n// Reminder Notification Component\nexport const ReminderNotifications = ({ reminderManager, onDismiss, onAction }) => {\n  const [notifications, setNotifications] = useState([]);\n\n  useEffect(() => {\n    const checkForDueReminders = () => {\n      const due = reminderManager.getDueReminders()\n        .filter(r => !r.lastNotified || (Date.now() - r.lastNotified) > (24 * 60 * 60 * 1000)) // Not notified in last 24h\n        .slice(0, 3); // Show max 3 at once\n\n      setNotifications(due);\n    };\n\n    checkForDueReminders();\n    const interval = setInterval(checkForDueReminders, 60000); // Check every minute\n\n    return () => clearInterval(interval);\n  }, [reminderManager]);\n\n  if (notifications.length === 0) return null;\n\n  return (\n    <div className=\"reminder-notifications\">\n      {notifications.map(reminder => (\n        <div key={reminder.id} className=\"notification-card reminder\">\n          <div className=\"notification-icon\">\n            {reminderManager.defaultOccasions.find(o => o.name === reminder.occasion)?.icon || '🎁'}\n          </div>\n\n          <div className=\"notification-content\">\n            <h4>Time to find a gift!</h4>\n            <p>{reminder.occasion} for {reminder.person} is coming up on {new Date(reminder.date).toLocaleDateString()}</p>\n          </div>\n\n          <div className=\"notification-actions\">\n            <button\n              className=\"btn-primary small\"\n              onClick={() => {\n                onAction(reminder);\n                onDismiss(reminder.id);\n                reminderManager.markAsNotified(reminder.id);\n              }}\n            >\n              Start Shopping\n            </button>\n            <button\n              className=\"btn-ghost small\"\n              onClick={() => {\n                onDismiss(reminder.id);\n                reminderManager.markAsNotified(reminder.id);\n              }}\n            >\n              Later\n            </button>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nconst GiftRemindersExports = {\n  GiftReminderManager,\n  GiftReminderDashboard,\n  ReminderNotifications\n};\n\nexport default GiftRemindersExports;"],"names":["GiftReminderManager","constructor","this","reminders","loadReminders","defaultOccasions","name","icon","category","leadTime","suggestions","saved","localStorage","getItem","JSON","parse","saveReminders","setItem","stringify","addReminder","reminderData","reminder","_objectSpread","id","concat","Date","now","Math","random","toString","substr","createdAt","status","notificationsSent","push","updateReminder","updates","index","findIndex","r","deleteReminder","filter","getUpcomingReminders","daysAhead","arguments","length","undefined","future","notifyDate","date","getTime","sort","a","b","getDueReminders","reminderDate","markAsNotified","find","lastNotified","generateYearlyReminders","partnerInfo","currentYear","getFullYear","birthday","occasion","getMonth","getDate","person","anniversaryDate","month","day","forEach","holiday","GiftReminderDashboard","_ref","reminderManager","onGiftSearch","setReminders","useState","showAddForm","setShowAddForm","dueReminders","setDueReminders","upcomingReminders","setUpcomingReminders","useEffect","updateReminders","interval","setInterval","clearInterval","handleStartGiftSearch","useCallback","o","searchParams","toLowerCase","deadline","_jsxs","className","children","_jsx","onClick","map","_reminderManager$defa","ceil","toLocaleDateString","_reminderManager$defa2","ReminderForm","onClose","onSave","notes","_ref2","formData","setFormData","recurring","customOccasion","onSubmit","e","preventDefault","value","onChange","prev","target","required","type","placeholder","min","toISOString","split","parseInt","rows","checked","ReminderNotifications","_ref3","onDismiss","onAction","notifications","setNotifications","checkForDueReminders","due","slice","_reminderManager$defa3"],"sourceRoot":""}